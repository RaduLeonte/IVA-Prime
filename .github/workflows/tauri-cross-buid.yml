name: Build Tauri App

on:
  workflow_dispatch:

jobs:
    build:
        name: Build tauri app for ${{ matrix.name }}
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'windows-latest' # Windows
                      args: ''
                      name: 'windows'
                    - platform: 'macos-latest' # Arm (M1 and above)
                      args: '--target aarch64-apple-darwin'
                      name: 'macos-arm64'
                    - platform: 'macos-latest' # Intel macs
                      args: '--target x86_64-apple-darwin'
                      name: 'macos-x64'
                    - platform: 'ubuntu-22.04' # Linux
                      args: ''
                      name: 'linux'
                        
        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: lts/*
              
            - name: Install linux dependencies
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                sudo apt-get update
                sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.11'

            - name: Run clone_from_django.py
              run: python tauri/iva-prime/clone_from_django.py


            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                workspaces: 'tauri/iva-prime/src-tauri -> target'

            - name: Install frontend dependencies
              working-directory: tauri/iva-prime
              run: npm install

            - name: Build Tauri app
              uses: tauri-apps/tauri-action@v0
              with:
                projectPath: tauri/iva-prime
                args: ${{ matrix.args }}

            - name: Create ZIP for Windows
              if: matrix.name == 'windows'
              run: |
                cd tauri/iva-prime/src-tauri/target/release/bundle/nsis
                zip -r ../windows.zip *.exe
                mv ../windows.zip ../../../..

            - name: Create ZIP for MacOS (arm64)
              if: matrix.name == 'macos-arm64'
              run: |
                cd tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg
                zip -r ../macos-arm64.zip *.dmg
                mv ../macos-arm64.zip ../../../..

            - name: Create ZIP for MacOS (x64)
              if: matrix.name == 'macos-x64'
              run: |
                cd tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg
                zip -r ../macos-x64.zip *.dmg
                mv ../macos-x64.zip ../../../..

            - name: Create ZIP for Linux
              if: matrix.name == 'linux'
              run: |
                cd tauri/iva-prime/src-tauri/target/release/bundle/appimage
                zip -r ../linux.zip *.AppImage
                mv ../linux.zip ../../../..

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: iva-prime-${{ matrix.name }}
                path: |
                    tauri/iva-prime/windows.zip
                    tauri/iva-prime/macos-arm64.zip
                    tauri/iva-prime/macos-x64.zip
                    tauri/iva-prime/linux.zip