name: Build Tauri App

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  release:
    types: [published]

jobs:
    build:
        name: Build tauri app for ${{ matrix.name }}
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'windows-latest' # Windows
                      args: ''
                      name: 'windows'
                    - platform: 'macos-latest' # Arm (M1 and above)
                      args: '--target aarch64-apple-darwin'
                      name: 'macos-arm64'
                    - platform: 'macos-latest' # Intel macs
                      args: '--target x86_64-apple-darwin'
                      name: 'macos-x64'
                    - platform: 'ubuntu-22.04' # Linux
                      args: ''
                      name: 'linux'
                        
        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get version from Cargo.toml
              working-directory: tauri/iva-prime/src-tauri
              shell: bash
              run: |
                VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml)
                echo "VERSION=$VERSION" >> $GITHUB_ENV
                echo "VERSION=$VERSION"
            
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: lts/*

            # Cache Node.js dependencies
            - name: Cache Node.js dependencies
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-  
              
            - name: Install linux dependencies
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                sudo apt-get update
                sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.11'

            - name: Run clone_from_django.py
              run: python tauri/iva-prime/clone_from_django.py


            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Cache Rust dependencies
              uses: actions/cache@v3
              with:
                path: |
                  ~/.cargo
                  tauri/iva-prime/src-tauri/target
                key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.toml') }}
                restore-keys: |
                  ${{ runner.os }}-rust-

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                workspaces: 'tauri/iva-prime/src-tauri -> target'

            - name: Install frontend dependencies
              working-directory: tauri/iva-prime
              run: npm install

            - name: Build Tauri app
              uses: tauri-apps/tauri-action@v0
              with:
                projectPath: tauri/iva-prime
                args: ${{ matrix.args }}

            # Rename artifacts based on the matrix
            - name: Rename artifacts
              shell: bash
              run: |
                VERSION="${{ env.VERSION }}"
                if [ "${{ matrix.name }}" == "windows" ]; then
                  mv tauri/iva-prime/src-tauri/target/release/bundle/nsis/*.exe tauri/iva-prime/src-tauri/target/release/bundle/nsis/IVA_Prime_${VERSION}_win64_setup.exe
                elif [ "${{ matrix.name }}" == "macos-arm64" ]; then
                  mv tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/IVA_Prime_${VERSION}_macos_arm.dmg
                elif [ "${{ matrix.name }}" == "macos-x64" ]; then
                  mv tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/IVA_Prime_${VERSION}_macos_intel.dmg
                elif [ "${{ matrix.name }}" == "linux" ]; then
                  mv tauri/iva-prime/src-tauri/target/release/bundle/appimage/*.AppImage tauri/iva-prime/src-tauri/target/release/bundle/appimage/IVA_Prime_${VERSION}_linux.AppImage
                fi

            - name: Upload artifacts
              if: github.event_name != 'release'
              uses: actions/upload-artifact@v4
              with:
                name: iva-prime-${{ matrix.name }}
                path: |
                  ${{ matrix.name == 'windows' && 'tauri/iva-prime/src-tauri/target/release/bundle/nsis/*.exe' || '' }}
                  ${{ matrix.name == 'macos-arm64' && 'tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg' || '' }}
                  ${{ matrix.name == 'macos-x64' && 'tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg' || '' }}
                  ${{ matrix.name == 'linux' && 'tauri/iva-prime/src-tauri/target/release/bundle/appimage/*.AppImage' || '' }}

            - name: Upload release assets
              if: github.event_name == 'release'
              uses: softprops/action-gh-release@v2
              with:
                files: |
                  tauri/iva-prime/src-tauri/target/release/bundle/nsis/*.exe
                  tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
                  tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
                  tauri/iva-prime/src-tauri/target/release/bundle/appimage/*.AppImage
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}