name: Build Tauri App

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    branches:
      - master
  release:
    types: [published]


jobs:
  get-info:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from Cargo.toml
        id: get_version
        working-directory: tauri/iva-prime/src-tauri
        shell: bash
        run: |
          VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT


  build-windows:
    runs-on: windows-latest
    needs: get-info
    if: ${{ github.event.inputs.skip_build != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install frontend dependencies
        working-directory: tauri/iva-prime
        run: npm install

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: tauri/iva-prime
          args: '--bundles nsis'

      - name: Rename Windows artifact
        shell: bash
        run: |
          VERSION="${{ needs.get-info.outputs.version }}"
          mv tauri/iva-prime/src-tauri/target/release/bundle/nsis/*.exe tauri/iva-prime/src-tauri/target/release/bundle/nsis/IVA-Prime-${VERSION}-win64-setup.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: iva-prime-windows
          path: tauri/iva-prime/src-tauri/target/release/bundle/nsis/*.exe


  build-macos-intel:
    runs-on: macos-latest
    needs: get-info
    if: ${{ github.event.inputs.skip_build != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin


      - name: Install frontend dependencies
        working-directory: tauri/iva-prime
        run: npm install

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: tauri/iva-prime
          args: '--target x86_64-apple-darwin --bundles dmg'

      - name: Rename macOS Intel artifact
        shell: bash
        run: |
          VERSION="${{ needs.get-info.outputs.version }}"
          mv tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/IVA-Prime-${VERSION}-macos-intel.dmg

      - name: Upload macOS Intel artifact
        uses: actions/upload-artifact@v4
        with:
          name: iva-prime-macos-intel
          path: tauri/iva-prime/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg


  build-macos-arm:
    runs-on: macos-latest
    needs: get-info
    if: ${{ github.event.inputs.skip_build != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin


      - name: Install frontend dependencies
        working-directory: tauri/iva-prime
        run: npm install

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: tauri/iva-prime
          args: '--target aarch64-apple-darwin --bundles dmg'

      - name: Rename macOS ARM artifact
        shell: bash
        run: |
          VERSION="${{ needs.get-info.outputs.version }}"
          mv tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/IVA-Prime-${VERSION}-macos-arm.dmg

      - name: Upload macOS ARM artifact
        uses: actions/upload-artifact@v4
        with:
          name: iva-prime-macos-arm
          path: tauri/iva-prime/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg


  build-linux:
    runs-on: ubuntu-22.04
    needs: get-info
    if: ${{ github.event.inputs.skip_build != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install frontend dependencies
        working-directory: tauri/iva-prime
        run: npm install


      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: tauri/iva-prime
          args: '--bundles deb,rpm'

      - name: Rename Linux artifact
        shell: bash
        run: |
          VERSION="${{ needs.get-info.outputs.version }}"
          # Rename AppImage
          mv tauri/iva-prime/src-tauri/target/release/bundle/appimage/*.AppImage tauri/iva-prime/src-tauri/target/release/bundle/appimage/IVA-Prime-${VERSION}-linux.AppImage || true
          # Rename DEB
          mv tauri/iva-prime/src-tauri/target/release/bundle/deb/*.deb tauri/iva-prime/src-tauri/target/release/bundle/deb/IVA-Prime-${VERSION}-linux.deb || true
          # Rename RPM
          mv tauri/iva-prime/src-tauri/target/release/bundle/rpm/*.rpm tauri/iva-prime/src-tauri/target/release/bundle/rpm/IVA-Prime-${VERSION}-linux.rpm || true

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: iva-prime-linux
          path: |
            tauri/iva-prime/src-tauri/target/release/bundle/appimage/*.AppImage
            tauri/iva-prime/src-tauri/target/release/bundle/deb/*.deb
            tauri/iva-prime/src-tauri/target/release/bundle/rpm/*.rpm


  pre-release:
    runs-on: ubuntu-latest
    needs: [get-info, build-windows, build-macos-intel, build-macos-arm, build-linux]
    if: ${{ (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.ref == 'refs/heads/nightly-build' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "nightly"
          name: "Desktop App Nightly Release ${{ needs.get-info.outputs.version }}-${{ github.run_id }}"
          prerelease: true
          body: |
            Nightly build of the IVA Prime desktop app.
            This version might contain bugs and can be unstable compared to the full release!
          files: |
            ./SHA256SUMS.txt
            ./*.AppImage
            ./*.deb
            ./*.rpm
            ./*.exe
            ./*.dmg
